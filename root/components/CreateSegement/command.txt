1.git remote checkout -b <开发功能名>//创建并切换到，远程开发分支
2.finish feact flow//完成开发分支功能
3.git add .
4.git commit -m 
5.git fecth origin //拉取完成功能分支期间，别人是否有提交<合并远程前解决冲突，提前拉去，非常适合Github flow>
6.A：有拉去到，git merge origin/master 合并拉下来的代码
  B：没有拉到，直接第7步
7.git add. 
8.git commit -m 
9.git push //推到远程功能分支<或者git push --set-upstream origin>
//功能分支合并到主分支
10.git checkout master
11.git merge <开发功能名>
12.git push//推到远程master分支



（
删除本地分支：git branch -d <分支名>
删除远程分支：git push origin --delete <分支名>

）
(
  HEAD^的意思是上一个版本，也可以写成HEAD~1

如果你进行了2次commit，想都撤回，可以使用HEAD~2

 

至于这几个参数：

--mixed 

意思是：不删除工作空间改动代码，撤销commit，并且撤销git add . 操作
这个为默认参数,git reset --mixed HEAD^ 和 git reset HEAD^ 效果是一样的。
 

--soft  

不删除工作空间改动代码，撤销commit，不撤销git add . 
 
--hard

删除工作空间改动代码，撤销commit，撤销git add . 

注意完成这个操作后，就恢复到了上一次的commit状态。

 

 

顺便说一下，如果commit注释写错了，只是想改一下注释，只需要：

git commit --amend

此时会进入默认vim编辑器，修改注释完毕后保存就好了。
)

拉取github，为合并的别人的PR
https://blog.csdn.net/weixin_45903995/article/details/126021367

回滚代码
https://blog.csdn.net/qq_52596258/article/details/125356146


yarn add 添加依赖的各种类型(指定版本安装、git中安装、tgz包安装、文件夹安装)
https://blog.csdn.net/youlinhuanyan/article/details/106783705



BUG 
1:聊天详情内容有个下框