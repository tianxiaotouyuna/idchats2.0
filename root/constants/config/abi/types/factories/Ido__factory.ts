/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { Ido, IdoInterface, ProjectInfoStruct } from "../Ido";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenA",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenB",
            type: "address",
          },
          {
            internalType: "string",
            name: "projectText",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "projectType",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "groupID",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inTokenCapacity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "outTokenCapacity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxExchange",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "exchange",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decimalA",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decimalB",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockNum",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "timeList",
            type: "uint256[]",
          },
        ],
        internalType: "struct idopool.projectInfo",
        name: "data",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_adminPoint",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "msg",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "exec",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "debug",
    type: "event",
  },
  {
    inputs: [],
    name: "adminAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "adminPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "advanceRelease",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "queryProjectInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenA",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenB",
            type: "address",
          },
          {
            internalType: "string",
            name: "projectText",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "projectType",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "groupID",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inTokenCapacity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "outTokenCapacity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxExchange",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "exchange",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decimalA",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decimalB",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockNum",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "timeList",
            type: "uint256[]",
          },
        ],
        internalType: "struct idopool.projectInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "queryUser",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountB",
            type: "uint256",
          },
        ],
        internalType: "struct idopool.lockUser[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "receiveOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "receiveUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "remainingAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sendAddrA",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sendAddrB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountIn",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenA",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenB",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class Ido__factory {
  static readonly abi = _abi;
  static createInterface(): IdoInterface {
    return new utils.Interface(_abi) as IdoInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Ido {
    return new Contract(address, _abi, signerOrProvider) as Ido;
  }
}
